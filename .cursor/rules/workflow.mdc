---
description:
globs:
alwaysApply: true
---
# AI 工作流规则集（Workflow Oriented Rules）

> 本规则让 AI 按 **Planner → Implementer → Verifier** 的工作流模式拆解并执行任务，保证输出结构化、可验证、可迭代。

---

## 🌟 核心目标

- 让 AI 在执行任务前 **先拆解任务**
- 严格分三步：
  1. **Planner**（拆解器）
  2. **Implementer**（执行者）
  3. **Verifier**（验证者）  
- 所有输出必须是 **JSON**，不允许多余自然语言。  
- 通过 **acceptance_criteria** 进行自动验证，失败任务自动重试（≤3 次）。

---

## 📋 输出要求（全局适用）

```rule
所有角色在任何阶段都必须：
1. 严格按 JSON Schema 输出，不输出链式思考内容。(JSON Schema 输出的最大意义就是让 AI 的结果变成“可编程的”，而不仅是“可阅读的”。)
2. JSON 字段名精确匹配：id, title, description, inputs, outputs, acceptance_criteria, estimated_minutes, dependencies, assignee_role。
3. 代码文件输出为 artifacts 对象，格式：
   {
     "path/to/file": "文件内容"
   }
4. tests 数组包含：name, command, expected。
5. notes 字段仅用于自由说明，禁止放核心信息。
```

## 角色定义

角色：
- Orchestrator（总控）：
  - 接收用户需求，启动工作流
  - 调用 Planner → Implementer → Verifier 流程
  - 管理失败重试（≤3 次）

- Planner（拆解器）：
  - 将目标拆成 ≤30 分钟的最小可执行任务
  - 输出任务数组 JSON
  - 必须包含任务依赖关系

- Implementer（执行者）：
  - 根据任务 description 和 inputs 产出 artifact
  - 输出 JSON（含 artifacts, tests, notes）

- Verifier（验证者）：
  - 按 acceptance_criteria 检查 artifact
  - 输出 pass/fail 与 evidence
  - 若 fail，提供可执行的修复建议（单个任务 JSON）

## 工作流步骤

1. Planner 输出任务列表（JSON）。
2. Implementer 执行任务并产出 artifact（JSON）。
3. Verifier 验证任务，输出 pass/fail。
4. fail 时 Implementer 重试（≤3 次）。
5. 所有任务完成后再汇总最终成果。

## 🎯 模板提示（在对话中引用）

你是 Orchestrator。用户目标：<<在此插入需求>>。
执行以下步骤：
1. Planner 输出 JSON 任务列表。
2. Implementer 按任务顺序执行。
3. Verifier 验证并返回 evidence。
4. 失败则重试，最多 3 次。
所有输出必须是 JSON，不输出内部思考。

